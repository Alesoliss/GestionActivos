#pragma checksum "C:\Users\LAB2\Documents\GitHub\GestionActivos\SistemaActivosFront\GestionActivos\Views\Empleados\PrincipalCalculo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c0f52c38cd27f8137d210be1094b8b6ab18545b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Empleados_PrincipalCalculo), @"mvc.1.0.view", @"/Views/Empleados/PrincipalCalculo.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\LAB2\Documents\GitHub\GestionActivos\SistemaActivosFront\GestionActivos\Views\_ViewImports.cshtml"
using GestionActivos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\LAB2\Documents\GitHub\GestionActivos\SistemaActivosFront\GestionActivos\Views\_ViewImports.cshtml"
using GestionActivos.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0f52c38cd27f8137d210be1094b8b6ab18545b5", @"/Views/Empleados/PrincipalCalculo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"06ccbeb79ff2b4b65a11fbe06774575f7ba5dbea", @"/Views/_ViewImports.cshtml")]
    public class Views_Empleados_PrincipalCalculo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GestionActivos.Models.EmpleadosViewmodel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CalculoListado", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mb-4"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0f52c38cd27f8137d210be1094b8b6ab18545b54628", async() => {
                WriteLiteral("\r\n    <div class=\"container mt-5\">\r\n        <h1 class=\"mb-4\">Calculo Listado de Empleados</h1>\r\n\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0f52c38cd27f8137d210be1094b8b6ab18545b55000", async() => {
                    WriteLiteral("\r\n            <div class=\"form-group\">\r\n                <label for=\"empleadoId\">Selecciona un empleado:</label>\r\n\r\n                <select id=\"empleadoId\" name=\"empleadoId\" class=\"form-control\">\r\n                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0f52c38cd27f8137d210be1094b8b6ab18545b55498", async() => {
                        WriteLiteral("Selecciona un empleado");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                </select>

            </div>

            <div class=""form-group"">
                <label for=""fechaInicio"">Fecha de inicio:</label>
                <input type=""date"" id=""fechaInicio"" name=""fechaInicio"" class=""form-control"">
            </div>

            <div class=""form-group"">
                <label for=""fechaFinal"">Fecha final:</label>
                <input type=""date"" id=""fechaFinal"" name=""fechaFinal"" class=""form-control"">
            </div>

            <button type=""submit"" class=""btn btn-primary"">Exportar</button>
        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"


        <table class=""table table-bordered table-striped"" id=""tabla"">
            <thead>
                <tr>
                    <th>Categoria</th>
                    <th>Activo</th>
                    <th>Costo Original</th>
                    <th>Costo Depreciable</th>
                    <th>Tasa Anual</th>
                    <th>Precio en Libros</th>


                </tr>
            </thead>

            <tbody>
                <tr>
                    <td>Computadoras</td>
                    <td>laptop Tay</td>
                    <td>785000.00</td>
                    <td>777150.0000</td>
                    <td>10.0</td>
                    <td>163280.000000000000000</td>
                </tr>


            </tbody>
        </table>




    </div>




    <script>
        async function obtenerListaEmpleados() {
            try {
                const response = await fetch('https://localhost:44311/API/Empleados/listaEmpleados');
                i");
                WriteLiteral(@"f (!response.ok) {
                    throw new Error('Error al obtener la lista de empleados');
                }
                const data = await response.json();

                if (!Array.isArray(data)) {
                    throw new Error('La respuesta no es un array de objetos');
                }



                $.each(data, function (key, empleado) {
                    $(""#empleadoId"").append(""<option value= "" + empleado.empl_Id + "">"" + empleado.nombre + ""</option>"");
                })

            } catch (error) {
                console.error(error);
            }
        }

        obtenerListaEmpleados();</script>



    <script>
        async function obtenerListaActivos() {
            try {
                const response = await fetch('https://localhost:44311/API/Empleados/Listado');
                console.log(response);
                if (!response.ok) {
                    throw new Error('Error al obtener la lista de activos');
                    ");
                WriteLiteral(@"console.log('Error al obtener la lista de activos')

                }
                console.log(data);
                const data = await response.json();

                if (!Array.isArray(data)) {
                    throw new Error('La respuesta no es un array de activos');
                }

                $.each(data, function (key, activo) {
                    $(""#tabla"").append("" <tr> < td>"" + activo.acti_Descripcion + ""</td>"" + ""<td>"" + activo.cate_Descripcion + ""</td>"" + ""  </tr >"");
                    console.log('aquiiiiiiii' + activo.acti_Descripcion)

                })
            } catch (error) {
                console.error(error);
            }
        }

        obtenerListaActivos();</script>




");
                WriteLiteral("\r\n\r\n");
                WriteLiteral(@"






















    <script src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js""></script>

    <script>
        async function obtenerCalculoListado() {
            try {
                const empleadoId = document.getElementById('empleadoId').value;
                const fechaInicio = document.getElementById('fechaInicio').value;
                const fechaFinal = document.getElementById('fechaFinal').value;

                const response = await fetch(/Empleados/CalculoListado ? empleadoId = ${ empleadoId } & fechaInicio=${ fechaInicio } & fechaFinal=${ fechaFinal });
                if (!response.ok) {
                    throw new Error('Errorrrrr');
                }
                const data = await response.json();

                // exceeeeeel
                generarArchivoExcel(data);
            } catch (error) {
                console.error(error);
            }
        }

        function generarArchivoExcel(data) {
   ");
                WriteLiteral(@"         const wb = XLSX.utils.book_new();

            // conversion de datosssss
            const ws = XLSX.utils.json_to_sheet(data);

            // agregar hojaa
            XLSX.utils.book_append_sheet(wb, ws, 'Empleados');

            // archivo en si excel
            const wbout = XLSX.write(wb, { type: 'binary', bookType: 'xlsx' });


            const blob = new Blob([s2ab(wbout)], { type: 'application/octet-stream' });

            // enlaceeeee
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'listado_empleados.xlsx';
            a.click();
            URL.revokeObjectURL(url);
        }

        // Array Bufferrrr
        function s2ab(s) {
            const buf = new ArrayBuffer(s.length);
            const view = new Uint8Array(buf);
            for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
            return buf;
        }
        //c");
                WriteLiteral(@"ambiar  //cambiar  //cambiar  //cambiar
        //cambiar al subirrrr
        document.querySelector('form').addEventListener('submit', function (event) {
            event.preventDefault();
            obtenerCalculoListado();
        });</script>









");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GestionActivos.Models.EmpleadosViewmodel> Html { get; private set; }
    }
}
#pragma warning restore 1591
