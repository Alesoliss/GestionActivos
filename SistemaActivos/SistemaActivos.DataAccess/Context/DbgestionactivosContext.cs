// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SistemaActivos.Entities.Entities;

#nullable disable

namespace SistemaActivos.DataAccess
{
    public partial class DbgestionactivosContext : DbContext
    {
        public DbgestionactivosContext()
        {
        }

        public DbgestionactivosContext(DbContextOptions<DbgestionactivosContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbActivos> tbActivos { get; set; }
        public virtual DbSet<tbActivosBitacora> tbActivosBitacora { get; set; }
        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbCategorias> tbCategorias { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbUsuario> tbUsuario { get; set; }
        public virtual DbSet<tbVidaUtil> tbVidaUtil { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbActivos>(entity =>
            {
                entity.HasKey(e => e.Acti_Id)
                    .HasName("PK_Acti_Id");

                entity.ToTable("tbActivos", "Acti");

                entity.Property(e => e.Acti_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_FechaAdquisicion).HasColumnType("datetime");

                entity.Property(e => e.Acti_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Acti_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Acti_Marca)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_Modelo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_NoSerio)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_Precio).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Acti_Url)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.Acti_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbActivosActi_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Acti_UsuarioCreacion)
                    .HasConstraintName("FK_Acti_UsuarioCreacion");

                entity.HasOne(d => d.Acti_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbActivosActi_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Acti_UsuarioModificacion)
                    .HasConstraintName("FK_Acti_UsuarioModificacion");

                entity.HasOne(d => d.Empl)
                    .WithMany(p => p.tbActivos)
                    .HasForeignKey(d => d.Empl_Id)
                    .HasConstraintName("FK_Empl_Id");

                entity.HasOne(d => d.VidU)
                    .WithMany(p => p.tbActivos)
                    .HasForeignKey(d => d.VidU_Id)
                    .HasConstraintName("FK_VidU_Id");
            });

            modelBuilder.Entity<tbActivosBitacora>(entity =>
            {
                entity.HasKey(e => e.ActB_Id)
                    .HasName("PK_ActB_Id");

                entity.ToTable("tbActivosBitacora", "Acti");

                entity.Property(e => e.Acti_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_FechaAdquisicion).HasColumnType("datetime");

                entity.Property(e => e.Acti_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Acti_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Acti_Marca)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_Modelo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_NoSerio)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Acti_Precio).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Acti_Url)
                    .HasMaxLength(90)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.Carg_Id)
                    .HasName("PK_Carg_Id");

                entity.ToTable("tbCargos", "Gnrl");

                entity.Property(e => e.Carg_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Carg_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Carg_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Carg_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCargosCarg_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Carg_UsuarioCreacion)
                    .HasConstraintName("FK_Carg_UsuarioCreacion");

                entity.HasOne(d => d.Carg_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCargosCarg_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Carg_UsuarioModificacion)
                    .HasConstraintName("FK_Carg_UsuarioModificacion");
            });

            modelBuilder.Entity<tbCategorias>(entity =>
            {
                entity.HasKey(e => e.Cate_Id)
                    .HasName("PK_Cate_Id");

                entity.ToTable("tbCategorias", "Acti");

                entity.Property(e => e.Cate_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Cate_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Cate_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Cate_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCategoriasCate_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Cate_UsuarioCreacion)
                    .HasConstraintName("FK_Cate_UsuarioCreacion");

                entity.HasOne(d => d.Cate_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCategoriasCate_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Cate_UsuarioModificacion)
                    .HasConstraintName("FK_Cate_UsuarioModificacion");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.Depa_Codigo)
                    .HasName("PK_Depa_Codigo");

                entity.ToTable("tbDepartamentos", "Gnrl");

                entity.HasIndex(e => e.Depa_Descripcion, "UQ__tbDepart__ED2DD75D320F9DF6")
                    .IsUnique();

                entity.Property(e => e.Depa_Codigo)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Depa_Descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Depa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Depa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosDepa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Depa_UsuarioCreacion)
                    .HasConstraintName("FK_Depa_UsuarioCreacion");

                entity.HasOne(d => d.Depa_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosDepa_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Depa_UsuarioModificacion)
                    .HasConstraintName("FK_Depa_UsuarioModificacion");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.Empl_Id)
                    .HasName("PK_Empl_Id");

                entity.ToTable("tbEmpleados", "Gnrl");

                entity.Property(e => e.Depa_Codigo)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_DNI)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_DireccionE)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_PApellido)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_PNombre)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_SApellido)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_SNombre)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Depa_CodigoNavigation)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Depa_Codigo)
                    .HasConstraintName("FK_Depa_CodigoEM");

                entity.HasOne(d => d.Empl_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Empl_UsuarioCreacion)
                    .HasConstraintName("FK_Empl_UsuarioCreacion");

                entity.HasOne(d => d.Empl_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Empl_UsuarioModificacion)
                    .HasConstraintName("FK_Empl_UsuarioModificacion");

                entity.HasOne(d => d.EstD)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.EstD_Id)
                    .HasConstraintName("FK_EstD_Id");

                entity.HasOne(d => d.Muni_CodigoNavigation)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Muni_Codigo)
                    .HasConstraintName("FK_Muni_CodigoEM");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.EstD_Id)
                    .HasName("PK_EstD_Id");

                entity.ToTable("tbEstadosCiviles", "Gnrl");

                entity.HasIndex(e => e.EstD_Descripcion, "UQ__tbEstado__DA9C1ADCE68E19D0")
                    .IsUnique();

                entity.Property(e => e.EstD_Id).ValueGeneratedNever();

                entity.Property(e => e.EstD_Descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EstD_FechaCracion).HasColumnType("datetime");

                entity.Property(e => e.EstD_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.EstD_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEstD_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.EstD_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_EstD_UsuarioCreacion");

                entity.HasOne(d => d.EstD_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEstD_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.EstD_UsuarioModificacion)
                    .HasConstraintName("FK_EstD_UsuarioModificacion");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.Muni_Codigo)
                    .HasName("PK_Muni_Codigo");

                entity.ToTable("tbMunicipios", "Gnrl");

                entity.HasIndex(e => e.Muni_Descripcion, "UQ__tbMunici__965316D6DC1E740C")
                    .IsUnique();

                entity.Property(e => e.Muni_Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Depa_Codigo)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Muni_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Depa_CodigoNavigation)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.Depa_Codigo)
                    .HasConstraintName("FK_Depa_Codigo");

                entity.HasOne(d => d.Muni_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Muni_UsuarioCreacion)
                    .HasConstraintName("FK_Muni_UsuarioCreacion");

                entity.HasOne(d => d.Muni_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Muni_UsuarioModificacion)
                    .HasConstraintName("FK_Muni_UsuarioModificacion");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Pant_Id)
                    .HasName("PK_Pant_Id");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Pant_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.PaRo_Id)
                    .HasName("PK_PaRo_Id");

                entity.ToTable("tbPantallasPorRoles", "Acce");

                entity.Property(e => e.PaRo_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.PaRo_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.PaRo_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesPaRo_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.PaRo_UsuarioCreacion)
                    .HasConstraintName("FK_PaRo_UsuarioCreacion");

                entity.HasOne(d => d.PaRo_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesPaRo_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.PaRo_UsuarioModificacion)
                    .HasConstraintName("FK_PaRo_PaRo_UsuarioModificacion");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Pant_Id)
                    .HasConstraintName("FK_Pant_Id");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Role_Id)
                    .HasConstraintName("FK_Role_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Role_Id)
                    .HasName("PK_Role_Id");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Role_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Role_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Role_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRolesRole_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Role_UsuarioModificacion)
                    .HasConstraintName("FK_Role_UsuarioModificacion");

                entity.HasOne(d => d.Role_UsuarionCreacionNavigation)
                    .WithMany(p => p.tbRolesRole_UsuarionCreacionNavigation)
                    .HasForeignKey(d => d.Role_UsuarionCreacion)
                    .HasConstraintName("FK_Role_UsuarioCreacion");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.Sucu_Id)
                    .HasName("PK_Sucu_Id");

                entity.ToTable("tbSucursales", "Gnrl");

                entity.Property(e => e.Depa_Codigo)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Sucu_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Sucu_DireccionExacta)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sucu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Sucu_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Depa_CodigoNavigation)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.Depa_Codigo)
                    .HasConstraintName("FK_Depa_Id");

                entity.HasOne(d => d.Muni_CodigoNavigation)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.Muni_Codigo)
                    .HasConstraintName("FK_Muni_Id");

                entity.HasOne(d => d.Sucu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbSucursalesSucu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Sucu_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Sucu_UsuarioCreacion");

                entity.HasOne(d => d.Sucu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbSucursalesSucu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Sucu_UsuarioModificacion)
                    .HasConstraintName("FK_Sucu_UsuarioModificacion");
            });

            modelBuilder.Entity<tbUsuario>(entity =>
            {
                entity.HasKey(e => e.Usua_Id)
                    .HasName("PK_Usua_Id");

                entity.ToTable("tbUsuario", "Acce");

                entity.Property(e => e.Usua_Contra).IsUnicode(false);

                entity.Property(e => e.Usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.Usua_UsuarionCreacionNavigation)
                    .WithMany(p => p.InverseUsua_UsuarionCreacionNavigation)
                    .HasForeignKey(d => d.Usua_UsuarionCreacion)
                    .HasConstraintName("FK_usuariocreacion_Id");

                entity.HasOne(d => d.Usua_UsuarionModificacionNavigation)
                    .WithMany(p => p.InverseUsua_UsuarionModificacionNavigation)
                    .HasForeignKey(d => d.Usua_UsuarionModificacion)
                    .HasConstraintName("FK_usuariomodificacion_Id");
            });

            modelBuilder.Entity<tbVidaUtil>(entity =>
            {
                entity.HasKey(e => e.VidU_Id)
                    .HasName("PK_VidU_Id");

                entity.ToTable("tbVidaUtil", "Acti");

                entity.Property(e => e.VidU_Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.VidU_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.VidU_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.VidU_VidaEstimada).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.Cate)
                    .WithMany(p => p.tbVidaUtil)
                    .HasForeignKey(d => d.Cate_Id)
                    .HasConstraintName("FK_Cate_Id");

                entity.HasOne(d => d.VidU_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbVidaUtilVidU_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.VidU_UsuarioCreacion)
                    .HasConstraintName("FK_VidU_UsuarioCreacion");

                entity.HasOne(d => d.VidU_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbVidaUtilVidU_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.VidU_UsuarioModificacion)
                    .HasConstraintName("FK_VidU_UsuarioModificacion");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}